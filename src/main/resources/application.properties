#spring.thymeleaf.cache: false

#Dossier de stockage des documents  sur logesco
dir.racine = ${user.home}/logesco/
dir.documents= ${user.home}/logesco/documentsUpload/
dir.documents.modeles= ${user.home}/logesco/documentsUpload/modeles/

#Dossier de stockage des documents  de l'etablissement géré par logesco
dir.racineEmblemes = ${user.home}/logesco/emblemes/
dir.emblemes.banniere = ${user.home}/logesco/emblemes/banniere/
dir.emblemes.logo= ${user.home}/logesco/emblemes/logo/
 
#Dossier de stockage des photos des eleves sur logesco
dir.racineImage = ${user.home}/logesco/imagesUpload/
dir.images.eleves= ${user.home}/logesco/imagesUpload/eleves/

#Dossier de stockage des photos du personnel sur logesco
dir.images.personnels = ${user.home}/logesco/imagesUpload/personnels/

#Dossier de stockage des logs de logesco
dir.logs = ${user.home}/logesco/logs/

logging.level.org.logesco = DEBUG
logging.level.org.springframework.security = ERROR
logging.level.org.springframework.web=ERROR
logging.level.org.hibernate=ERROR

logging.path = ${user.home}/logesco/logs/
logging.file=logesco.logs
logging.pattern.file= %d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n
logging.pattern.console= %d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n  
logging.level.root=ERROR
logging.file.max-size=5MB
logging.file.max-history=5



#definition du port d'ecoute de Tomcat

server.port = 8080

#On precise par la suivante que le serveur doit toujours initialiser les variables qui permettront d'afficher les erreurs rencontrées
server.error.include-stacktrace = always

#définition du datasource de l'application permettant l'acces a la base de données: logescodb

spring.datasource.driver-class-name= com.mysql.jdbc.Driver
spring.datasource.password=ckiadjeu89=19+
spring.datasource.url=jdbc:mysql://localhost:3306/logescodb
spring.datasource.username = root

#les proprietes qui permettront a mysql de supporter les cles etrangeres donc elles permettront de
#d'utiliser INNODB comme moteur de stockage.

spring.jpa.database-platform= org.hibernate.dialect.MySQL5InnoDBDialect

#propriete permettant de detruire le modele et recreer ou alors de mettre a jour le modele
#la valeur create permet de tout detruire et recreer le modele de la bd en supprimant les donnees

spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.use-new-id-generator-mappings = true
#spring.jpa.show-sql = true

#spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true

#definition des proprietes devant servir à l'upload des fichiers sur le serveur

#spring.servlet.multipart.max-file-size= 60MB#Lorsqu'on est dans spring 2
#spring.servlet.multipart.max-request-size= 65MB#Lorsqu'on est dans spring 2

#Lorsqu'on est dans spring 1.5

spring.http.multipart.max-file-size=60MB
spring.http.multipart.max-request-size=65MB

#language par defaut de l'application fr|en
langue=fr



